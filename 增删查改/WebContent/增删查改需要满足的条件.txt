
增加（save）：web页面中需要序列化表单，如果运用了struts2，form表单中的每一个name属性里面的值都应该是（首字母小写的要序列化的类名.属性）与action里面的要映射的类相对应的；
action里面只需要调用保存的方法即可。

删除（delete）：如果是单个删除，必须要获取到要删除的某一行的id，将id值根据ajax请求传入到后台，后台也要定义一个与页面一一相对应的id名（必须是要删除的这个类的id名）；
action里面定义的id数据类型是string型，如果你的类里面的id为int类型则要进行强转（int newId = Integer.perseInt(id)）,后台action类接收到这个id名，如果dao方法里面删除的时候是根据id来删除返回一条记录那就简单了，只需要将这个id传入到dao方法里即可。
如果dao方法里面删除的时候是根据实体类来删除，那就要先根据这个id来查出实体类，在根据实体类来删除；
如果是批量删除，则序列化整个要删除区域的form表单，将要删除的name（这个name必须有值）传入到后台，后台也要定义一个与页面一一对应的name名（不过后台的这个name名是一个数组）；
action里面定义的数组在删除之前要进行for循环取出每一个id，在根据id来删除即可。
如果dao方法里面删除的时候是根据实体类来删除，那就要先根据这个id来查出实体类，在根据实体类来删除；

查询（select）：通常就是页面发起一个请求到action即可。如果是根据name或者其他的属性来查询就要将这个属性也一并根据ajax传入到后台，在根据这个属性来查询；

修改（update）：通常就是获取到页面的某一条要更新的记录的id，1、编辑的页面中应该多写一个input输入框，类型type设置为隐藏，name为这个类的id。先将这个id传入到后台进行（根据id）查询，然后将结果集返回到web页面进行数据填充（id也要填充），填充完将事先序列化好的form表单进行update操作发起一个请求传入到后台。2、后台根据这个id来进行update操作，web里面将返回值进行数据渲染。