6. 方法重载

    同一个类里，方法名相同，方法参数不同（类型不同或参数个数不同）
    称为方法重载。

    
7. 类的构造方法
  
    当我们实例化对象时， 通过new关键字  ,实际上是调用类的构造方法。
      类名   对象名=new  类名()
      
   当我们编写类时，没有写构造方法时，类里会默认提供一个空的构造方法.
  如下:
    public   类名(){
    
    }
    
   当我们写了自己的构造方法后，默认构造方法就不提供了。
   使用new 必须调用自己写的构造方法。
 
  所以：编写构造方法时，常常会写一个空参数的构造方法。
   
   构造方法： 1 .无返回值类型
           2. 方法名和类名相同
           3. 构造方法可以重载
           
           
  构造方法常用于，在实例化对象时，为对象属性赋值。
  
  
8. this关键字
    
      类里的方法，访问类的属性，使用this关键字


9. public 和 private 关键字

    public 关键字 -- 公共的。
     当public 修饰一个属性或方法时，别的类都可以访问 
     
   private 关键字 -- 私有的。
    当private 修饰一个属性或方法时,只有本类可以访问       

    
10.  类的属性 --私有化
    一般为了安全性，都将类的属性设置为private  
  属性private后，会为属性提供set和get方法。
  set方法--- 设置属性的值
  get方法 --- 获得属性的值 
  
  方法命名规范：   属性 abc   方法 setAbc   getAbc
  
      private String name;
      
      public void setName(String name){
           this.name=name;
      }
      
      public String getName(){
         return this.name;
      }
      
11. 包 package
   
      将类放入不同的包中. 不同的包，类可以同名
     
     包名：  com.test.groupA           公司叫test.com
    
   使用不同包的类时，需要先导入该类
    import  com.test.groupA.Cat ;
    或者导入某包里的全部类
    import  com.test.groupB.*;

   创建包后，在磁盘上，会自动创建com/test/groupA文件夹
  

总结：
  
    类里，有属性，构造方法，普通方法
     构造方法：无返回值类型，与类同名.
    属性如果private ,就为属性编写get 和 set 
    普通方法和构造方法都可以重载
    通过new去实例化对象，实际就是调用类的构造方法
    类可以位于包中，调用不同包的类，需要先导入 
    







   
   
  